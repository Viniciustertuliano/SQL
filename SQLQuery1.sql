--Aula 01 06/02/2020
select getdate()
--Inserindo "---" comentario

/*
Comentario em bloco
selecionar cada programa passo a passo
*/

--Tecla comentario CTRL + KC
--sql serve como SELECT GETDATE(), select getdate() ou SELECT GetDate()
--CTRL + R deixar de exibir o resultado

--Criando o banco de dados

CREATE DATABASE AULA01

--EXPERIMENTANDO AS TABELAS DO
--FIT_ALUNOS

SELECT * FROM E_EMPRESA

--EXERCICIO: VERIFICAR O REGISTRO DAS TABELA E_EVENTO, E_LOCAL, FABRICANTE E FT_ESTADIO
--QUANTOS REGISTROS CADAS TABELA POSSUI

SELECT * FROM E_EVENTO
--2 linhas

SELECT * FROM E_LOCAL
--1 linhas

SELECT * FROM FABRICANTE
--9 linhas

SELECT * FROM FT_ESTADIO
--6 linhas

--AULA 02 13/02/2020

--ENTRANDO NO DATABASE

USE master
USE fit_alunos

SELECT * FROM fit_alunos.dbo.FT_ESTADIO -- 6 resultados

--CRIANDO TABELAS

CREATE TABLE TB_IMPACTA
(
	NOME_ALUNO	CHAR(50)
)

 --CONSULTADO A TABELA CRIADA
SELECT * FROM TB_IMPACTA

--VERIFICANDO A ESTRUTURA DA TABELA

SP_HELP TB_IMPACTA

---INSERINDO VALORES NA TABELA

INSERT INTO TB_IMPACTA
(NOME_ALUNO)
VALUES
('ABNER PORTO'),
('JAIR PORTO')

SELECT * FROM TB_IMPACTA

--EXERCICIO AULA 13.02

CREATE TABLE TB_AULA02
(

CIDADE CHAR(30)

)

INSERT INTO TB_AULA02
(CIDADE)
VALUES
('São Paulo'),
('Rio de Janeiro')

SELECT * FROM TB_AULA02

--DROP TABLE - EXCLUIR TABELA

/*

CRIANDO UMA TABELA COM CAMPO DE AUTO NUMERAÇÃO E
COM CHAVE PRIMÁRIA.

*/


CREATE TABLE UF
	(
		ID_UF INT IDENTITY,
		UF CHAR(30)
	)

INSERT INTO UF
	(UF)
VALUES
	('SÃO PAULO'),
	('RIO DE JANEIRO')

SELECT * FROM UF

-- DELETAR TODOS OS REGISTROS DA TABELA
-- OBS: A CONTAGEM DO ID NÃO É ZERADA, DANDO CONTINUIDADE AO INSERIR NOVOS DADOS.

DELETE UF

-- CRIANDO TABELA COM CHAVE PRIMARIA

CREATE TABLE TB_SI_E_ADS
(

	COD_ALUNO INT,
	NOME_ALUNO CHAR(30)
	
	-- CONFIGURAÇÃO CHAVE PRIMARIA E RESTRIÇÃO DE DUPLICIDADE
	CONSTRAINT PK_COD_ALUNO PRIMARY KEY (COD_ALUNO)
)

INSERT INTO TB_SI_E_ADS
(COD_ALUNO, NOME_ALUNO)
VALUES

(1800074,'Beltrano')

SELECT * FROM TB_SI_E_ADS


/*

UML: UNIFYING MODELING LANGUAGE

________________________
|	   TB_CADASTRO     |
________________________
|COD_CLIENTE INT       |
|NOME_CLIENTE CHAR(30) |
|TELEFONE BIGINT	   |
________________________
OBS: COD_CLIENTE (PK)

*/

CREATE TABLE TB_CADASTRO
	(
		COD_CLIENTE INT,
		NOME_CLIENTE CHAR(30),
		TELEFONE BIGINT
		-- CHAVE PRIMARIA E RESTRIÇÃO DE DUPLICIDADE
		CONSTRAINT PK_COD_CLIENTE PRIMARY KEY (COD_CLIENTE)
	)

INSERT INTO TB_CADASTRO
	(COD_CLIENTE,NOME_CLIENTE,TELEFONE)
VALUES
	(4,'TESTE',46578000)


SELECT * FROM TB_CADASTRO

SP_HELP TB_CADASTRO

--20/02/2020

--clustered    1.Performance
--unique       2.Não repete
--primary key  3.Abre uma porta para uma foreign key

--non clustered 

--Foreign key

CREATE TABLE TB_FUNC
(
	COD_FUNC	INT,
	NOME_FUNC	CHAR(30)

	CONSTRAINT PK_FUNC PRIMARY KEY(COD_FUNC)
)

INSERT INTO TB_FUNC
(COD_FUNC, NOME_FUNC)
VALUES 
(1000, 'JÓSE'),
(2000, 'MARIA')

CREATE TABLE TB_DEPN
(
	COD_DEPN	INT, 
	NOME_DEPN	CHAR(30),
	COD_FUNC	INT

	CONSTRAINT PK_COD_DEPN PRIMARY KEY (COD_DEPN),
	CONSTRAINT FK_COD_FUNC FOREIGN KEY (COD_FUNC)
	REFERENCES TB_FUNC(COD_FUNC)
)

INSERT INTO TB_DEPN
(COD_DEPN,NOME_DEPN, COD_FUNC)
VALUES
(1000,'jOSÉ JUNIOR', 1000),
(2000, 'MARIO BROS',2000),
--(3000,'ORFÃO',3000)

SELECT * FROM TB_DEPN

--CRIAR TABELA DE VEICULOS 
--COD_VEIC (PK)	BIGINT
--NOME_VEIC		VARCHAR(50)

--CRIAR TABELA DE MULTAS
--COD_MULTA(PK)		BIGINT
--VALOR_MULTA		MONEY
--COD_VEICULO(FK)	BIGINT

--ESTABELECER RELACIONAMENTO ENTRE AS DUAS TABELAS

CREATE TABLE TB_VEICULOS
(
	COD_VEIC	BIGINT,
	NOME_VEIC	VARCHAR(30)

	CONSTRAINT PK_COD_VEIC PRIMARY KEY(COD_VEIC)
)

INSERT INTO TB_VEICULOS
(COD_VEIC, NOME_VEIC)
VALUES
(1000, 'FOX'),
(2000, 'GOL')

CREATE TABLE TB_MULTA
(
	COD_MULTA		BIGINT,
	VALOR_MULTA		MONEY,	
	COD_VEIC		BIGINT

	CONSTRAINT PK_COD_MULTA PRIMARY KEY (COD_MULTA),
	CONSTRAINT FK_COD_VEIC FOREIGN KEY (COD_VEIC)
	REFERENCES TB_VEICULOS(COD_VEIC)
)

INSERT INTO TB_MULTA
(COD_MULTA,VALOR_MULTA,COD_VEIC)
VALUES
(1000,100.00,1000),
(2000,500.00,2000),
--(3000,350.00,3000)

--CRIAR A ESTRUTURA DE UM RESTAURANTE (CARDÁPIO + COMANDA)
--NA TABELA DE CARDÁPIO, COLOCAR: COD_PRAT + NOME_PRATO + VALOR_PRATO
--NA TABELA DE COMANDA, COLOCAR, COD_PRATO + DATA_PEDIDO
--FORMATO DATA: AAAA-MM-DD

CREATE TABLE TB_CARDAPIO
(
	COD_PRAT	INT,
	NOME_PRAT	VARCHAR (30),
	VALOR_PRAT	MONEY

	CONSTRAINT PK_COD_PRAT PRIMARY KEY(COD_PRAT)
)



INSERT INTO TB_CARDAPIO
(COD_PRAT,NOME_PRAT,VALOR_PRAT)
VALUES
(10,'FEIJOADA',25.00),
(20,'LASANHA',20.00)

CREATE TABLE TB_COMANDA
(	COD_PRATO		INT,
	DATA_PEDIDO		DATE
	
	CONSTRAINT FK_COD_PRAT FOREIGN KEY(COD_PRATO)
	REFERENCES TB_CARDAPIO(COD_PRAT)

)

INSERT INTO TB_COMANDA
(COD_PRATO,DATA_PEDIDO)
VALUES
(10,'2020-02-20'),
(20,'2020-02-19'),
(30,'2020-02-19')

SELECT * FROM TB_COMANDA